<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- 扫描除controller之外的bean -->
	<context:component-scan base-package="com.zh">
	  <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan> 
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<context:property-placeholder location="classpath:db.properties"/>
 	<!-- 数据源 -->
 	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <!--其他配置-->
	</bean>
 	
 	<!-- session工厂，保留mybatis配置文件 -->
 	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
 		<property name="dataSource" ref="dataSource" />
 		<property name="configLocation" value="classpath:mybatis-config.xml"/>
 	</bean>
	
	<!-- <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean> -->
	
	<!-- 配置一个userMapper接口代理bean, 需要配置很多。。 MapperScannerConfigurer可以简化-->
    <!-- <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
      <property name="mapperInterface" value="com.tianshouzhi.mybatis.mapper.UserMapper" />
      <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean> -->
    
    <!-- 自动*递归*扫描，可以有标记接口、注解、包等配置 -->
    <!-- 可以指定sqlSessionFactory,也可以不指定，会自动扫描 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="basePackage" value="com.zh.mappers;com.zh.domain" />
    	<!-- 这么写不支持configureplaceholder,会报错，不建议使用 -->
    	<!-- <property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
    	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    
    <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="defaultTimeout" value="30000" />
    	<property name="dataSource" ref="dataSource" />
    	<property name="rollbackOnCommitFailure" value="true" />
    </bean>
    
    <!-- 基于注解的事务配置 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
</beans>
